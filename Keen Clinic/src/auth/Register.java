package auth;

import database.Database;
import java.awt.event.WindowEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mustafa Mohamed
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        jLabelStatus.setText("");
        DocumentListener l = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                clearStatus();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                clearStatus();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                clearStatus();
            }
        };
        jTextFieldUsername.getDocument().addDocumentListener(l);
        jPasswordFieldConfirm.getDocument().addDocumentListener(l);
        jPasswordFieldPassword.getDocument().addDocumentListener(l);
        jLabelHeader.putClientProperty("FlatLaf.styleClass", "h3");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelHeader = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jPasswordFieldConfirm = new javax.swing.JPasswordField();
        jButtonSetPassword = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jXHyperlinkLogin = new org.jdesktop.swingx.JXHyperlink();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Keen Clinic - Set Username and Password");
        setResizable(false);

        jLabelHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeader.setText("It seems this is the first time you're running Keen Clinic.");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please set the username and password");

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        jLabel5.setText("Confirm password");

        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });

        jPasswordFieldConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldConfirmActionPerformed(evt);
            }
        });

        jButtonSetPassword.setText("Set username and password");
        jButtonSetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetPasswordActionPerformed(evt);
            }
        });

        jLabelStatus.setText("jLabel6");

        jXHyperlinkLogin.setText("Login instead");
        jXHyperlinkLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jXHyperlinkLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXHyperlinkLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonSetPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jXHyperlinkLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordFieldConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 75, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeader)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jPasswordFieldConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelStatus)
                .addGap(18, 18, 18)
                .addComponent(jButtonSetPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jXHyperlinkLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jXHyperlinkLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXHyperlinkLoginActionPerformed
        onLogin();
    }//GEN-LAST:event_jXHyperlinkLoginActionPerformed

    private void jButtonSetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSetPasswordActionPerformed
        onSetUsernameAndPassword();
    }//GEN-LAST:event_jButtonSetPasswordActionPerformed

    private void jPasswordFieldConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldConfirmActionPerformed
        onSetUsernameAndPassword();
    }//GEN-LAST:event_jPasswordFieldConfirmActionPerformed

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void clearStatus() {
        jLabelStatus.setText("");
    }

    private void onSetUsernameAndPassword() {
        jLabelStatus.setText("");
        String username = jTextFieldUsername.getText();
        if (username.isBlank()) {
            jLabelStatus.setText("Username is required.");
            jTextFieldUsername.requestFocusInWindow();
            jTextFieldUsername.selectAll();
            return;
        }
        String password = String.valueOf(jPasswordFieldPassword.getPassword());
        String confirm = String.valueOf(jPasswordFieldConfirm.getPassword());
        if (!password.equals(confirm)) {
            jLabelStatus.setText("The two passwords do not match.");
            jPasswordFieldPassword.requestFocusInWindow();
            jPasswordFieldPassword.selectAll();
            return;
        }

        String hashed = BCrypt.hashpw(password, BCrypt.gensalt());
        String sql = """
                     SELECT COUNT(*) FROM `user` WHERE `username` = ?
                     """;
        try (Connection conn = Database.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, username);
            ResultSet rs = stmt.executeQuery();
            rs.next();
            int count = rs.getInt(1);
            if (count > 0) {
                jLabelStatus.setText("The username you provided is not available.");
            } else {
                sql = """
                      INSERT INTO `user` (username, `password`) VALUES(?, ?)
                      """;
                stmt = conn.prepareStatement(sql);
                stmt.setString(1, username);
                stmt.setString(2, hashed);
                int updated = stmt.executeUpdate();
                if (updated != 1) {
                    conn.rollback();
                    jLabelStatus.setText("Something went wrong. Please try again later.");
                } else {
                    conn.commit();
                    String message = "Username and password set successfully.";
                    if (!isRestore) {
                        message += "\nClick OK to login with your credentials.";
                    }
                    JOptionPane.showMessageDialog(this,
                            message,
                            "Password Set Successfully", JOptionPane.INFORMATION_MESSAGE);
                    if (!isRestore) {
                        onLogin();
                    } else {
                        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    }

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setHeaderText(String text) {
        jLabelHeader.setText(text);
    }

    public void disableLogin() {
        jXHyperlinkLogin.setEnabled(false);
    }

    private boolean isRestore = false;

    public void isFromRestore() {
        isRestore = true;
    }

    private void onLogin() {
        Login login = new Login();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        login.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSetPassword;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelHeader;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPasswordField jPasswordFieldConfirm;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JTextField jTextFieldUsername;
    private org.jdesktop.swingx.JXHyperlink jXHyperlinkLogin;
    // End of variables declaration//GEN-END:variables
}
