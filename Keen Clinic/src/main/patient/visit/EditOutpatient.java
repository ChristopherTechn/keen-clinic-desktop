package main.patient.visit;

import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import main.patient.event.VisitAddedEvent;
import main.patient.event.VisitDeletedEvent;
import main.patient.event.VisitListener;
import main.patient.event.VisitUpdatedEvent;
import main.patient.visit.prescription.AllowNegativeShelfEvent;
import main.patient.visit.prescription.EditPrescription;
import static main.patient.visit.prescription.GlobalPrescriptionEventManager.PRESCRIPTION_EVENT_MANAGER;
import main.patient.visit.prescription.NewPrescription;
import main.patient.visit.prescription.Prescription;
import main.patient.visit.prescription.PrescriptionAddedEvent;
import main.patient.visit.prescription.PrescriptionDeletedEvent;
import main.patient.visit.prescription.PrescriptionEventListener;
import main.patient.visit.prescription.PrescriptionTableModel;
import main.patient.visit.prescription.PrescriptionTempAddedEvent;
import main.patient.visit.prescription.PrescriptionTempDeletedEvent;
import main.patient.visit.prescription.PrescriptionTempUpdatedEvent;
import main.patient.visit.prescription.PrescriptionUpdatedEvent;
import utils.Utils;

/**
 *
 * @author Mustafa Mohamed
 */
public class EditOutpatient extends javax.swing.JDialog implements PrescriptionEventListener, VisitListener {

    private final int visitId;
    private boolean edited = false;
    private Outpatient visit;

    private final PrescriptionTableModel tableModel = new PrescriptionTableModel();

    private void setupPrescriptionTable() {
        jTablePrescriptions.setModel(tableModel);
    }

    public boolean isEdited() {
        return edited;
    }

    /**
     * Creates new form NewOutpatient
     *
     * @param parent
     * @param modal
     * @param visitId
     */
    public EditOutpatient(java.awt.Frame parent, boolean modal, int visitId) {
        super(parent, modal);
        initComponents();
        this.visitId = visitId;
        ChangeListener l = (ChangeEvent e) -> {
            setBMI();
        };
        jSpinnerHeight.getModel().addChangeListener(l);
        jSpinnerWeight.getModel().addChangeListener(l);
        setupPrescriptionTable();
        getVisit();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuPrescriptions = new javax.swing.JPopupMenu();
        jMenuItemAdd = new javax.swing.JMenuItem();
        jMenuItemEdit = new javax.swing.JMenuItem();
        jMenuItemDelete = new javax.swing.JMenuItem();
        jButtonCancel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPhysicals = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinnerWeight = new javax.swing.JSpinner();
        jSpinnerHeight = new javax.swing.JSpinner();
        jTextFieldVisual = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaComplaints = new javax.swing.JTextArea();
        jLabelBMI = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldOPD = new javax.swing.JTextField();
        jPanelExams = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaPhysicalExam = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaLabExam = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jPanelOutcome = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaDiagnosis = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaTreatment = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaRemarks = new javax.swing.JTextArea();
        jComboBoxOutcome = new javax.swing.JComboBox<>();
        jLabelStatus = new javax.swing.JLabel();
        jPanelPrescription = new javax.swing.JPanel();
        jButtonAddPrescription = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTablePrescriptions = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jButtonNext = new javax.swing.JButton();
        jButtonPrevious = new javax.swing.JButton();

        jPopupMenuPrescriptions.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jPopupMenuPrescriptionsPopupMenuWillBecomeVisible(evt);
            }
        });

        jMenuItemAdd.setText("Add...");
        jPopupMenuPrescriptions.add(jMenuItemAdd);

        jMenuItemEdit.setText("Edit...");
        jMenuItemEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditActionPerformed(evt);
            }
        });
        jPopupMenuPrescriptions.add(jMenuItemEdit);

        jMenuItemDelete.setText("Delete");
        jMenuItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteActionPerformed(evt);
            }
        });
        jPopupMenuPrescriptions.add(jMenuItemDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Outpatient Visit");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel1.setText("Weight");

        jLabel2.setText("Height");

        jLabel3.setText("BMI");

        jLabel4.setText("Visual acuity");

        jLabel5.setText("Complaints");

        jSpinnerWeight.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));

        jSpinnerHeight.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));

        jTextAreaComplaints.setColumns(20);
        jTextAreaComplaints.setRows(5);
        jScrollPane1.setViewportView(jTextAreaComplaints);

        jLabelBMI.setText("Enter weight and height to show patient BMI");

        jLabel12.setText("OPD #");

        javax.swing.GroupLayout jPanelPhysicalsLayout = new javax.swing.GroupLayout(jPanelPhysicals);
        jPanelPhysicals.setLayout(jPanelPhysicalsLayout);
        jPanelPhysicalsLayout.setHorizontalGroup(
            jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPhysicalsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPhysicalsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanelPhysicalsLayout.createSequentialGroup()
                        .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanelPhysicalsLayout.createSequentialGroup()
                                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldOPD, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelBMI)
                                    .addComponent(jTextFieldVisual, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(189, Short.MAX_VALUE))))
        );
        jPanelPhysicalsLayout.setVerticalGroup(
            jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPhysicalsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldOPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinnerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinnerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelBMI))
                .addGap(18, 18, 18)
                .addGroup(jPanelPhysicalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldVisual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Physicals", jPanelPhysicals);

        jLabel6.setText("Physical exam");

        jTextAreaPhysicalExam.setColumns(20);
        jTextAreaPhysicalExam.setRows(5);
        jScrollPane2.setViewportView(jTextAreaPhysicalExam);

        jTextAreaLabExam.setColumns(20);
        jTextAreaLabExam.setRows(5);
        jScrollPane3.setViewportView(jTextAreaLabExam);

        jLabel7.setText("Lab exam");

        javax.swing.GroupLayout jPanelExamsLayout = new javax.swing.GroupLayout(jPanelExams);
        jPanelExams.setLayout(jPanelExamsLayout);
        jPanelExamsLayout.setHorizontalGroup(
            jPanelExamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelExamsLayout.createSequentialGroup()
                .addGroup(jPanelExamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addGroup(jPanelExamsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanelExamsLayout.setVerticalGroup(
            jPanelExamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Exams", jPanelExams);

        jLabel8.setText("Outcome");

        jLabel9.setText("Diagnosis");

        jTextAreaDiagnosis.setColumns(20);
        jTextAreaDiagnosis.setRows(5);
        jScrollPane4.setViewportView(jTextAreaDiagnosis);

        jLabel10.setText("Treatment");

        jTextAreaTreatment.setColumns(20);
        jTextAreaTreatment.setRows(5);
        jScrollPane5.setViewportView(jTextAreaTreatment);

        jLabel11.setText("Remarks");

        jTextAreaRemarks.setColumns(20);
        jTextAreaRemarks.setRows(5);
        jScrollPane6.setViewportView(jTextAreaRemarks);

        jComboBoxOutcome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alive", "Dead" }));

        jLabelStatus.setText("jLabel1");

        javax.swing.GroupLayout jPanelOutcomeLayout = new javax.swing.GroupLayout(jPanelOutcome);
        jPanelOutcome.setLayout(jPanelOutcomeLayout);
        jPanelOutcomeLayout.setHorizontalGroup(
            jPanelOutcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOutcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOutcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanelOutcomeLayout.createSequentialGroup()
                        .addGroup(jPanelOutcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addGroup(jPanelOutcomeLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelOutcomeLayout.setVerticalGroup(
            jPanelOutcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOutcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOutcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBoxOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelStatus)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Diagnosis and Treatment", jPanelOutcome);

        jButtonAddPrescription.setText("Add...");
        jButtonAddPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPrescriptionActionPerformed(evt);
            }
        });

        jTablePrescriptions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "#", "Drug", "Quantity", "Dosage", "Remarks"
            }
        ));
        jTablePrescriptions.setComponentPopupMenu(jPopupMenuPrescriptions);
        jTablePrescriptions.setRowHeight(33);
        jTablePrescriptions.setShowHorizontalLines(true);
        jTablePrescriptions.setShowVerticalLines(true);
        jTablePrescriptions.setSurrendersFocusOnKeystroke(true);
        jScrollPane7.setViewportView(jTablePrescriptions);

        jLabel13.setText("Please update drug shelf yourself. Prescriptions updated here are not updated on shelf.");

        javax.swing.GroupLayout jPanelPrescriptionLayout = new javax.swing.GroupLayout(jPanelPrescription);
        jPanelPrescription.setLayout(jPanelPrescriptionLayout);
        jPanelPrescriptionLayout.setHorizontalGroup(
            jPanelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrescriptionLayout.createSequentialGroup()
                        .addComponent(jButtonAddPrescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelPrescriptionLayout.setVerticalGroup(
            jPanelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddPrescription)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Prescriptions", jPanelPrescription);

        jButtonNext.setText("Next");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jButtonPrevious.setText("Previous");
        jButtonPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonNext)
                    .addComponent(jButtonPrevious))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        close();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        onSave();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviousActionPerformed
        onPrevious();
    }//GEN-LAST:event_jButtonPreviousActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        onNext();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonAddPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPrescriptionActionPerformed
        onAddPrescription();
    }//GEN-LAST:event_jButtonAddPrescriptionActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        PRESCRIPTION_EVENT_MANAGER.addListener(this);
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItemEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditActionPerformed
        onEditPrescription();
    }//GEN-LAST:event_jMenuItemEditActionPerformed

    private void jMenuItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteActionPerformed
        onDeletePrescriptions();
    }//GEN-LAST:event_jMenuItemDeleteActionPerformed

    private void jPopupMenuPrescriptionsPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jPopupMenuPrescriptionsPopupMenuWillBecomeVisible
        onPopupPrescriptionsVisible();
    }//GEN-LAST:event_jPopupMenuPrescriptionsPopupMenuWillBecomeVisible

    private void onPopupPrescriptionsVisible() {
        int selected = jTablePrescriptions.getSelectedRowCount();
        jMenuItemEdit.setEnabled(selected == 1);
        jMenuItemDelete.setEnabled(selected > 0);
    }

    private void onAddPrescription() {
        NewPrescription dialog = new NewPrescription(this, false, 0, false);
        dialog.setLocationRelativeTo(this);
        Utils.closeDialogOnEscape(dialog);
        dialog.setNewOutpatientId(visitId);
        dialog.setVisible(true);
    }

    private void onEditPrescription() {
        int selected = jTablePrescriptions.getSelectedRowCount();
        if (selected == 1) {
            Prescription p = tableModel.getRowItem(
                    jTablePrescriptions.convertRowIndexToModel(jTablePrescriptions.getSelectedRow()));
            EditPrescription dialog = new EditPrescription(this, false, p, false);
            dialog.setLocationRelativeTo(this);
            Utils.closeDialogOnEscape(dialog);
            dialog.setNewOutpatientId(visitId);
            dialog.setVisible(true);
        }
    }

    private void onDeletePrescriptions() {
        if (jTablePrescriptions.getSelectedRowCount() > 0) {
            List<Prescription> prescriptions = new ArrayList<>();
            for (int i : jTablePrescriptions.getSelectedRows()) {
                prescriptions.add(tableModel.getRowItem(jTablePrescriptions.convertRowIndexToModel(i)));
            }
            // the two loops are needed so that we don't modify the model while processing it
            for (Prescription p : prescriptions) {
                PRESCRIPTION_EVENT_MANAGER.notifyPrescriptionTempDeleted(
                        new PrescriptionTempDeletedEvent(visitId, p));
            }
        }
    }

    private void onPrevious() {
        int current = jTabbedPane1.getSelectedIndex();
        if (current > 0) {
            jTabbedPane1.setSelectedIndex(current - 1);
        }
    }

    private void onNext() {
        int current = jTabbedPane1.getSelectedIndex();
        if (current < jTabbedPane1.getTabCount() - 1) {
            jTabbedPane1.setSelectedIndex(current + 1);
        }
    }

    private void setBMI() {
        float weight = (float) jSpinnerWeight.getValue();
        float height = (float) jSpinnerHeight.getValue();
        if (weight > 0 && height > 0) {
            jLabelBMI.setText(String.valueOf(weight / (height * height)));
        } else {
            jLabelBMI.setText("Enter weight and height above to calculate BMI");
        }
    }

    private void onSave() {
        visit.complaints = jTextAreaComplaints.getText().trim();
        visit.diagnosis = jTextAreaDiagnosis.getText().trim();
        visit.height = (float) jSpinnerHeight.getValue();
        visit.labExam = jTextAreaLabExam.getText().trim();
        visit.opdNumber = jTextFieldOPD.getText().trim();
        visit.outcome = jComboBoxOutcome.getSelectedIndex() < 0 ? null : (String) jComboBoxOutcome.getSelectedItem();
        visit.physicalExam = jTextAreaPhysicalExam.getText().trim();
        visit.remarks = jTextAreaRemarks.getText().trim();
        visit.treatment = jTextAreaTreatment.getText().trim();
        visit.visitDate = LocalDateTime.now();
        visit.visualAcuity = jTextFieldVisual.getText().trim();
        visit.weight = (float) jSpinnerWeight.getValue();
        visit.prescriptions.clear();
        for (Prescription p : tableModel.getRowItems()) {
            visit.prescriptions.add(p);
        }
        try {
            var updated = Outpatient.updateOutpatient(visit);
            if (updated) {
                edited = true;
            } else {
                JOptionPane.showMessageDialog(this, """
                                                    An error occurred while saving the visit.
                                                    Try agian later.""", "Failed", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditOutpatient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, """
                                                    An error occurred while saving the visit.
                                                    Try agian later.""", "Failed", JOptionPane.WARNING_MESSAGE);
        } finally {
            if (edited) {
                JOptionPane.showMessageDialog(this, "Visit updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                close();
            }
        }
    }

    private void close() {
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    private void getVisit() {
        try {
            visit = Outpatient.getOutpatient(visitId);
            jTextFieldOPD.setText(visit.opdNumber == null ? "" : visit.opdNumber);
            jSpinnerHeight.setValue(visit.height);
            jSpinnerWeight.setValue(visit.weight);
            jTextFieldVisual.setText(visit.visualAcuity == null ? "" : visit.visualAcuity);
            jTextAreaComplaints.setText(visit.complaints == null ? "" : visit.complaints);
            jTextAreaPhysicalExam.setText(visit.physicalExam == null ? "" : visit.physicalExam);
            jTextAreaLabExam.setText(visit.labExam == null ? null : visit.labExam);
            jComboBoxOutcome.setSelectedIndex(visit.outcome == null || visit.outcome.equals("Alive") ? 0 : 1);
            jTextAreaDiagnosis.setText(visit.diagnosis == null ? "" : visit.diagnosis);
            jTextAreaTreatment.setText(visit.treatment == null ? "" : visit.treatment);
            jTextAreaRemarks.setText(visit.remarks == null ? "" : visit.remarks);
            tableModel.clearRowItems();
            for (Prescription p : visit.prescriptions) {
                tableModel.addRowItem(p);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditOutpatient.class.getName()).log(Level.SEVERE, null, ex);
            jButtonSave.setEnabled(false);
            JOptionPane.showMessageDialog(this, "An error occurred.\nPlease try again later.", "Error", JOptionPane.WARNING_MESSAGE);
        }

    }

    @Override
    public void onPrescriptionAdded(PrescriptionAddedEvent event) {
        if (event.prescription.visitId == visitId) {
            getVisit();
        }
    }

    @Override
    public void onPrescriptionUpdated(PrescriptionUpdatedEvent event) {
        if (event.prescription.visitId == visitId) {
            getVisit();
        }
    }

    @Override
    public void onPrescriptionDeleted(PrescriptionDeletedEvent event) {
        if (event.prescription.visitId == visitId) {
            getVisit();
        }
    }

    @Override
    public void onPrescriptionTempAdded(PrescriptionTempAddedEvent event) {
        if (event.eventId == visitId) {
            tableModel.addRowItem(event.prescription);
        }
    }

    @Override
    public void onPrescriptionTempUpdated(PrescriptionTempUpdatedEvent event) {
        if (event.eventId == visitId) {
            Prescription p = event.prescription;
            for (int i = 0; i < tableModel.size(); i++) {
                Prescription c = tableModel.getRowItem(i);
                if (c.getTempId() == p.getTempId()) {
                    c.dosage = p.dosage;
                    c.drugId = p.drugId;
                    c.drugName = p.drugName;
                    c.quantity = p.quantity;
                    c.remarks = p.remarks;
                    c.visitId = p.visitId;
                    break;
                }
            }
        }
    }

    @Override
    public void onPrescriptionTempDeleted(PrescriptionTempDeletedEvent event) {
        if (event.eventId == visitId) {
            Prescription prescription = event.prescription;
            Prescription toDelete = null;
            for (int i = 0; i < tableModel.size(); i++) {
                Prescription c = tableModel.getRowItem(i);
                if (c.getTempId() == prescription.getTempId()) {
                    toDelete = c;
                    break;
                }
            }
            if (toDelete != null) {
                tableModel.removeRowItem(toDelete);
            }
        }
    }

    @Override
    public void onAllowNegativeShelf(AllowNegativeShelfEvent event) {

    }

    @Override
    public void onVisitAdded(VisitAddedEvent event) {

    }

    @Override
    public void onVisitUpdated(VisitUpdatedEvent event) {
        if (event.newVisit.id == visitId) {
            getVisit();
        }
    }

    @Override
    public void onVisitDeleted(VisitDeletedEvent event) {
        if (event.visit.id == visitId) {
            close();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPrescription;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrevious;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxOutcome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBMI;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JMenuItem jMenuItemAdd;
    private javax.swing.JMenuItem jMenuItemDelete;
    private javax.swing.JMenuItem jMenuItemEdit;
    private javax.swing.JPanel jPanelExams;
    private javax.swing.JPanel jPanelOutcome;
    private javax.swing.JPanel jPanelPhysicals;
    private javax.swing.JPanel jPanelPrescription;
    private javax.swing.JPopupMenu jPopupMenuPrescriptions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinnerHeight;
    private javax.swing.JSpinner jSpinnerWeight;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTablePrescriptions;
    private javax.swing.JTextArea jTextAreaComplaints;
    private javax.swing.JTextArea jTextAreaDiagnosis;
    private javax.swing.JTextArea jTextAreaLabExam;
    private javax.swing.JTextArea jTextAreaPhysicalExam;
    private javax.swing.JTextArea jTextAreaRemarks;
    private javax.swing.JTextArea jTextAreaTreatment;
    private javax.swing.JTextField jTextFieldOPD;
    private javax.swing.JTextField jTextFieldVisual;
    // End of variables declaration//GEN-END:variables

}
