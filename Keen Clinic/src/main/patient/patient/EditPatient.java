package main.patient.patient;

import database.AppProperties;
import main.patient.event.GlobalEventManager;
import main.patient.event.PatientUpdatedEvent;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static main.patient.event.GlobalEventManager.PATIENT_LISTENER_MANAGER;
import main.patient.event.PatientAddedEvent;
import main.patient.event.PatientDeletedEvent;
import main.patient.event.PatientListener;

/**
 *
 * @author Mustafa Mohamed
 */
public class EditPatient extends javax.swing.JDialog implements PatientListener {

    private final int patientId;
    private boolean edited = false;

    public boolean isEdited() {
        return edited;
    }

    /**
     * Creates new form EditPatient
     *
     * @param parent
     * @param modal
     * @param patientId
     */
    public EditPatient(java.awt.Frame parent, boolean modal, int patientId) {
        super(parent, modal);
        initComponents();
        this.patientId = patientId;
        jLabelStatus.setText("");
        getPatientInfo();
    }

    private void close() {
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    public void initWindow() {
        int width = getWidth();
        int height = getHeight();
        int x = getLocation().x;
        int y = getLocation().y;

        width = Integer.parseInt(AppProperties.get("EditPatientWidth", String.valueOf(width)));
        height = Integer.parseInt(AppProperties.get("EditPatientHeight", String.valueOf(height)));
        x = Integer.parseInt(AppProperties.get("EditPatientX", String.valueOf(x)));
        y = Integer.parseInt(AppProperties.get("EditPatientY", String.valueOf(y)));

        setSize(width, height);
        setLocation(x, y);

    }

    private void saveWindowConfig() {
        int width = getWidth();
        int height = getHeight();
        int x = getLocation().x;
        int y = getLocation().y;
        AppProperties.put("EditPatientWidth", String.valueOf(width));
        AppProperties.put("EditPatientHeight", String.valueOf(height));
        AppProperties.put("EditPatientX", String.valueOf(x));
        AppProperties.put("EditPatientY", String.valueOf(y));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldFirstName = new javax.swing.JTextField();
        jTextFieldLastName = new javax.swing.JTextField();
        jTextFieldOtherNames = new javax.swing.JTextField();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jXDatePickerDateOfBirth = new org.jdesktop.swingx.JXDatePicker();
        jTextFieldAddress = new javax.swing.JTextField();
        jTextFieldPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRemarks = new javax.swing.JTextArea();
        jButtonCancel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldOutpatientNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Patient");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("First name");

        jLabel2.setText("Last name");

        jLabel3.setText("Other names");

        jLabel4.setText("Gender");

        jLabel5.setText("Date of birth");

        jLabel6.setText("Address");

        jLabel7.setText("Phone number");

        jLabel8.setText("Remarks");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jTextAreaRemarks.setColumns(20);
        jTextAreaRemarks.setRows(5);
        jScrollPane1.setViewportView(jTextAreaRemarks);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabelStatus.setText("jLabel9");

        jLabel9.setText("Outpatient number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldOutpatientNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jXDatePickerDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldOtherNames, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldOutpatientNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldOtherNames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jXDatePickerDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCancel)
                        .addComponent(jButtonSave)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        close();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        onSave();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        saveWindowConfig();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        PATIENT_LISTENER_MANAGER.addListener(this);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        PATIENT_LISTENER_MANAGER.removeListener(this);
    }//GEN-LAST:event_formWindowClosed

    private Patient getPatientFromFields() {
        Patient patient = new Patient();
        patient.outpatientNumber = jTextFieldOutpatientNumber.getText().trim();
        patient.lastName = jTextFieldLastName.getText().trim();
        patient.otherNames = jTextFieldOtherNames.getText().trim();
        patient.gender = jComboBoxGender.getSelectedIndex() < 0 ? null : jComboBoxGender.getSelectedIndex() == 0 ? "Male" : "Female";
        patient.dateOfBirth = jXDatePickerDateOfBirth.getDate() == null ? null : jXDatePickerDateOfBirth.getDate()
                .toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        patient.address = jTextFieldAddress.getText().trim();
        patient.phoneNumber = jTextFieldPhone.getText().trim();
        patient.remarks = jTextAreaRemarks.getText().trim();
        patient.firstName = jTextFieldFirstName.getText().trim();
        return patient;
    }

    private void onSave() {
        Patient p = new Patient();
        p.address = jTextFieldAddress.getText().trim();
        p.dateOfBirth = jXDatePickerDateOfBirth.getDate() == null ? null : jXDatePickerDateOfBirth.getDate()
                .toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        p.firstName = jTextFieldFirstName.getText().trim();
        p.gender = jComboBoxGender.getSelectedIndex() == 0 ? "Male" : "Female";
        p.id = this.patientId;
        p.lastName = jTextFieldLastName.getText().trim();
        p.otherNames = jTextFieldOtherNames.getText().trim();
        p.phoneNumber = jTextFieldPhone.getText().trim();
        p.remarks = jTextAreaRemarks.getText().trim();
        p.outpatientNumber = jTextFieldOutpatientNumber.getText().trim();

        try {
            Patient.updatePatient(p);
            edited = true;

        } catch (SQLException ex) {
            Logger.getLogger(EditPatient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, """
                                                An error occurred while saving the patient.
                                                Try again later.""", "Failed", JOptionPane.WARNING_MESSAGE);
        } finally {
            if (edited) {
                try {
                    Patient newPatient = Patient.getPatient(patientId);
                    PatientUpdatedEvent event = new PatientUpdatedEvent();
                    event.newPatient = newPatient;
                    event.oldPatient = oldPatient;
                    GlobalEventManager.PATIENT_LISTENER_MANAGER.notifyPatientUpdated(event);
                } catch (SQLException ex) {
                    Logger.getLogger(EditPatient.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Patient updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                close();
            }
        }
    }

    private Patient oldPatient;

    private void getPatientInfo() {
        try {
            Patient p = Patient.getPatient(this.patientId);
            oldPatient = p;
            jTextFieldFirstName.setText(p.firstName == null ? "" : p.firstName);
            jTextFieldLastName.setText(p.lastName == null ? "" : p.lastName);
            jTextFieldOtherNames.setText(p.otherNames == null ? "" : p.otherNames);
            jComboBoxGender.setSelectedIndex(p.gender == null || p.gender.equals("Male") ? 0 : 1);
            jXDatePickerDateOfBirth.setDate(p.dateOfBirth == null ? null : Date.from(p.dateOfBirth.atStartOfDay(ZoneId.systemDefault()).toInstant()));
            jTextFieldAddress.setText(p.address == null ? "" : p.address);
            jTextFieldPhone.setText(p.phoneNumber == null ? "" : p.phoneNumber);
            jTextAreaRemarks.setText(p.remarks == null ? "" : p.remarks);
            jTextFieldOutpatientNumber.setText(p.outpatientNumber == null ? "" : p.outpatientNumber);
        } catch (SQLException ex) {
            Logger.getLogger(EditPatient.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "An error occurred.\nPlease try again later.", "Error", JOptionPane.WARNING_MESSAGE);
            jButtonSave.setEnabled(false);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaRemarks;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldOtherNames;
    private javax.swing.JTextField jTextFieldOutpatientNumber;
    private javax.swing.JTextField jTextFieldPhone;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerDateOfBirth;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onPatientAdded(PatientAddedEvent event) {

    }

    @Override
    public void onPatientDeleted(PatientDeletedEvent event) {
        if (event.patient != null && event.patient.id == patientId) {
            close();
        }
    }

    @Override
    public void onPatientUpdated(PatientUpdatedEvent event) {
        if (event.newPatient != null && event.newPatient.id == patientId) {
            getPatientInfo();
        }
    }
}
